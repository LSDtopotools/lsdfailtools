:numbered:

== Installation

All the code has been developed, tested and run on `UNIX` platform. It requires uses of a pass:[C++] compiler and a `python 3` environment.

=== The code

The code has been developed within the open-source https://lsdtopotools.github.io/[LSDTopoTools] research software suite. The deliverable has been packaged into a `zip` file with the final report and contains all the code required for running the analysis.


=== Compiling the model

The pass:[C++] model is in the subdirectory `cpp_model`. You must navigate into this directory and compile the code. 

Compilations can be done with the `GNU g++` compiler, installed in most `UNIX` and `IOS` distributions. The `Analysis_driver` folder in the root folder contains a `make` file that automates the compilation. Navigate to the directory where this make file in a terminal window and compile with:

[source,console]
----
$ make -f iverson_model.make
----

It generates an executable file named `iverson_model.exe` in the same folder and is ready to be used.

=== Installing the `python` package

The `python` package which we use to manage our simulations (called `iverson_python`) can be installed in any `python` environment satisfying the following dependencies: `numpy`, `scipy`, `pandas`, `pytables` and `matplotlib`. The package is downloaded with the `github` repository in the folder `python_tools` and can be installed in the `python` environment using `pip install .` in the `python_tools folder`.

==== Optional: Getting a python environment with conda

If the user does not have `python` on their system, they will need to install an environment for the `python` scripts. We have written this documentation assuming use of the `miniconda` environment manager. https://docs.conda.io/en/latest/miniconda.html[Miniconda] is an easy, clean and open-source solution. It can be downloaded from https://repo.continuum.io/miniconda/[here]. Choose any `python 3` installer compatible with your operating system. Once installed it offers a clean method to manage different `python` environments with different combinations of packages installed. Once install, run the following command to create an environment:

[source,console]
----
$ conda create -n iverson_python
----

This creates a `python` environment named `iverson_python`. Whenever you start a session you can activate this environment with:

[source,console]
----
conda activate iverson_python
----

When the environment has been successfully activated if `(iverson_python)` is stated at the beginning of the command line. After the first activation, the dependencies can be installed with:

[source,console]
----
conda install -c conda-forge numpy scipy pandas pytables matplotlib
----

This only needs to be run once. All installed packages will remain available when you reactivate the environment.

After you have done this, you into the `python_tools` directory and run the command

[source,console]
----
$ pip install .
----
