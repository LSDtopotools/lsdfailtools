Packages needed so far:
- scikit-image --> this installs a lot of extra shit
- pandas
- scikit-learn
- pysph
- gdal
- shapely
- geopandas
- pyqt
- gcc
- xtensor
- xtensor-python

NOTE TO SELF: If I can't make crate the executable file, this is because it has been created/imported before and therefore it won't create it again. You need to delete all
the .o and .exe/.out files.
NOTE TO SELF #2: Initially, I couldn't get the iverson2000.py file to run because it couldn't import the lsdfailtools_cpp. This is not per se a file, it is been compiled in cpp through the "wheel".
This wheel has to be created as per the documentation but it is quite tricky to get all the packages. It complains about C++14, the version of gcc, etc. I tried to make the wheel on my laptop
and then transfer it, but this wouldn't work. Eventually I had to create a new environment where I had no packages installed. This eventually worked. I will now have to include all the other Packages
that I initially had.
NOTE to self #3: I have no idea why but I think installing gdal breaks everything. I tried to run iverson200.py and now it doesn't work again. It looks like the wheel needs rebuilding every time??
                 I should ask Boris about this. Now Calibration_functions also works fine...
NOTE #4: When I leave the virtual environment it all works fine in the Calibration folder for some obscure reason... It asked me to install pyshp, which is the only thing missing and that
was it.



Environments: iverson-python --> this is a bit messed up at the minute, has all the packages but something fucked up
              test-iverson-python --> this has a lot less packages
              new_iverson_python --> latest environment where the wheel works. and the lsdfailtools_cpp import works.

Alldata_processing:

    Inclinometers: DONE
    InSAR: Process_insar_EWV: testMC directory cannot be found. Could only plot 1 out of 2 graphs. I think they are test graphs so not too important.
                              There are some plotting going on here that has been commented out. Data is also saved in Data_Marina_tests. This somehow takes a lot less time to run somehow!
           Process_insar_AD: Should potentially change the file paths to make them match the base directories. This seems to be very slow? Check if it's just the server being a pain.
                             Somehow I cannot save files in the interferometry folder. I had to create a new folder to save the data in : Data_Marina_tests
           Combine_InSAR: DONE
    Piezometers: Make_shapefiles: DONE. Had to also change some output paths but works fine now.
    Precipitation: this mostly involves downloading data from the NASA website, so I am gonna leave this for a while now.
        NEED TO CHECK WHERE ALL THE PRECIPITATION FILES ARE. SOME SEEM TO BE MISSING. 
    Sentinel: Functions: DONE. Had to change the directory where the figures are now saved. This is Data_marina_tests/Figures.
              Process_sentinel: DONE. Run the code up to the point where it takes the displacement into account, as we are not sure of what type of displacement this is.
                                This has generated images for each of the failure points (922 in total).
              Combine sentinel: DONE but not sure how this uses the sentinel data. It seems to just use the interferometry InSAR data. The path to the Insar_functions file had to be changed.

Calibration:

    Calibration_functions: This needs iverson2000 model which in turn needs the cpp version on the model. This can be found on folder plot_iverson_lsdtt/cpp_model.
                           Had to modify some of the function arguments.
    Run_calibration: Will is still developing this. Wait till he uploads the full updated code.

Validation:

    Validation_functions: DONE
    Run_validation: This bit requires Figure_functions.py. The last part of this script seems to do the calibration process again, not sure why. Had to install scikit learn and SALib.

Visualisation:

    Figure_functions: DONE. Had to be slightly edited.
    Final_outputs_visualisation: DONE. Once again, there's a bit at the end for the calibration. Not sure why this is here.
    Here I would like to clean the code, make it more explicit what the user wants to do/plot. Right now, there's a lot of lines that need to be uncommented.
    Need to import Insar_functions and give path to this.
